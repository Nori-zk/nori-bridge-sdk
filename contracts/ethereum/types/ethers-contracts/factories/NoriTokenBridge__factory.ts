/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { NoriTokenBridge, NoriTokenBridgeInterface } from "../NoriTokenBridge.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "attestationHash",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "when",
        "type": "uint256"
      }
    ],
    "name": "TokensLocked",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "bridgeOperator",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "attestationHash",
        "type": "uint256"
      }
    ],
    "name": "lockTokens",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "lockedTokens",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104838061005b5f395ff3fe608060405260043610610033575f3560e01c806353719b6e14610037578063590665c2146100735780636e27d8891461009d575b5f5ffd5b348015610042575f5ffd5b5061005d60048036038101906100589190610287565b6100b9565b60405161006a91906102d4565b60405180910390f35b34801561007e575f5ffd5b506100876100d9565b60405161009491906102fc565b60405180910390f35b6100b760048036038101906100b29190610315565b6100fd565b005b6001602052815f5260405f20602052805f5260405f205f91509150505481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f341161013f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101369061039a565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f82825461019a91906103e5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90e20a62e0f2a608d33bd96a4e15cb853006a15caf4455f373b7b55de520b68c8234426040516101eb93929190610418565b60405180910390a250565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610223826101fa565b9050919050565b61023381610219565b811461023d575f5ffd5b50565b5f8135905061024e8161022a565b92915050565b5f819050919050565b61026681610254565b8114610270575f5ffd5b50565b5f813590506102818161025d565b92915050565b5f5f6040838503121561029d5761029c6101f6565b5b5f6102aa85828601610240565b92505060206102bb85828601610273565b9150509250929050565b6102ce81610254565b82525050565b5f6020820190506102e75f8301846102c5565b92915050565b6102f681610219565b82525050565b5f60208201905061030f5f8301846102ed565b92915050565b5f6020828403121561032a576103296101f6565b5b5f61033784828501610273565b91505092915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657220746f206c6f636b5f82015250565b5f610384602083610340565b915061038f82610350565b602082019050919050565b5f6020820190508181035f8301526103b181610378565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103ef82610254565b91506103fa83610254565b9250828201905080821115610412576104116103b8565b5b92915050565b5f60608201905061042b5f8301866102c5565b61043860208301856102c5565b61044560408301846102c5565b94935050505056fea264697066735822122079456faf17724fcf74617ba4656d2a6896315da56226c277e62f7a5173f4e19664736f6c634300081c0033";

  
      type NoriTokenBridgeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: NoriTokenBridgeConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class NoriTokenBridge__factory extends ContractFactory {
    
      constructor(...args: NoriTokenBridgeConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<NoriTokenBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): NoriTokenBridge__factory {
      return super.connect(runner) as NoriTokenBridge__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): NoriTokenBridgeInterface {
      return new Interface(_abi) as NoriTokenBridgeInterface;
    }
    
    override attach(address: string | Addressable): NoriTokenBridge {
      return super.attach(address) as NoriTokenBridge;
    }
  static connect(address: string, runner?: ContractRunner | null): NoriTokenBridge {
      return new Contract(address, _abi, runner) as unknown as NoriTokenBridge;
    }
  }

  
  